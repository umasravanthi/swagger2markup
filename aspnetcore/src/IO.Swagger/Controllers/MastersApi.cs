/*
 * API Documentation
 *
 * defaultDeription
 *
 * OpenAPI spec version: 1.0.0-oas3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;
using IO.Swagger.Security;
using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class MastersApiController : ControllerBase
    { 
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>the method returns the masters list with field data from the “Account” tag.</remarks>
        /// <param name="fields"></param>
        /// <param name="accessToken"></param>
        /// <response code="200">successful operation</response>
        /// <response code="403">Forbidden - Access to the resource by the provider is forbidden</response>
        /// <response code="404">Not found - The requested resource is not found</response>
        /// <response code="502">Provider server error - Something went wrong on the Provider or Endpoint’s server</response>
        [HttpGet]
        [Route("/8API/List/Masters/Core__Account")]
        [ValidateModelState]
        [SwaggerOperation("8APIListMastersCoreAccountGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(InlineResponse2008), description: "successful operation")]
        public virtual IActionResult 8APIListMastersCoreAccountGet([FromQuery]string fields, [FromHeader]string accessToken)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(InlineResponse2008));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            //TODO: Uncomment the next line to return response 502 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(502);
            string exampleJson = null;
            exampleJson = "{\n  \"result\" : 0,\n  \"data\" : [ {\n    \"sCode\" : \"sCode\",\n    \"iStatus\" : 6\n  }, {\n    \"sCode\" : \"sCode\",\n    \"iStatus\" : 6\n  } ],\n  \"message\" : \"message\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<InlineResponse2008>(exampleJson)
                        : default(InlineResponse2008);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>This method will return the list of masters along with the field details of the master tag.</remarks>
        /// <param name="accessToken"></param>
        /// <response code="200">successful operation</response>
        /// <response code="403">Forbidden - Access to the resource by the provider is forbidden</response>
        /// <response code="404">Not found - The requested resource is not found</response>
        /// <response code="502">Provider server error - Something went wrong on the Provider or Endpoint’s server</response>
        [HttpGet]
        [Route("/8API/List/Masters")]
        [ValidateModelState]
        [SwaggerOperation("8APIListMastersGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(InlineResponse2004), description: "successful operation")]
        public virtual IActionResult 8APIListMastersGet([FromHeader]string accessToken)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(InlineResponse2004));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            //TODO: Uncomment the next line to return response 502 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(502);
            string exampleJson = null;
            exampleJson = "{\n  \"result\" : 0,\n  \"data\" : [ {\n    \"APIMasterName\" : true,\n    \"Caption\" : \"Caption\",\n    \"MasterTypeId\" : 6\n  }, {\n    \"APIMasterName\" : true,\n    \"Caption\" : \"Caption\",\n    \"MasterTypeId\" : 6\n  } ],\n  \"message\" : \"message\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<InlineResponse2004>(exampleJson)
                        : default(InlineResponse2004);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>For delete the Particular master</remarks>
        /// <param name="masterCode"></param>
        /// <param name="accessToken"></param>
        /// <response code="200">Auto generated using Swagger Inspector</response>
        /// <response code="403">Forbidden - Access to the resource by the provider is forbidden</response>
        /// <response code="404">Not found - The requested resource is not found</response>
        /// <response code="502">Provider server error - Something went wrong on the Provider or Endpoint’s server</response>
        [HttpDelete]
        [Route("/8API/Masters/Core__TestMaster/{MasterCode}")]
        [ValidateModelState]
        [SwaggerOperation("8APIMastersCoreTestMasterMasterCodeDelete")]
        [SwaggerResponse(statusCode: 200, type: typeof(InlineResponse2009), description: "Auto generated using Swagger Inspector")]
        public virtual IActionResult 8APIMastersCoreTestMasterMasterCodeDelete([FromRoute][Required]string masterCode, [FromHeader]string accessToken)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(InlineResponse2009));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            //TODO: Uncomment the next line to return response 502 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(502);
            string exampleJson = null;
            exampleJson = "{\n  \"result\" : 0,\n  \"data\" : [ { }, { } ],\n  \"message\" : \"message\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<InlineResponse2009>(exampleJson)
                        : default(InlineResponse2009);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Saving the particular master data</remarks>
        /// <param name="body"></param>
        /// <param name="accessToken"></param>
        /// <response code="200">Succesfull operation</response>
        /// <response code="403">Forbidden - Access to the resource by the provider is forbidden</response>
        /// <response code="404">Not found - The requested resource is not found</response>
        /// <response code="502">Provider server error - Something went wrong on the Provider or Endpoint’s server</response>
        [HttpPost]
        [Route("/8API/Masters/Core__Warehouse")]
        [ValidateModelState]
        [SwaggerOperation("8APIMastersCoreWarehousePost")]
        [SwaggerResponse(statusCode: 200, type: typeof(InlineResponse2005), description: "Succesfull operation")]
        public virtual IActionResult 8APIMastersCoreWarehousePost([FromBody]Body1 body, [FromHeader]string accessToken)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(InlineResponse2005));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            //TODO: Uncomment the next line to return response 502 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(502);
            string exampleJson = null;
            exampleJson = "{\n  \"result\" : 0,\n  \"data\" : [ {\n    \"MasterId\" : 6,\n    \"VoucherNo\" : \"VoucherNo\",\n    \"Exception\" : \"Exception\"\n  }, {\n    \"MasterId\" : 6,\n    \"VoucherNo\" : \"VoucherNo\",\n    \"Exception\" : \"Exception\"\n  } ],\n  \"message\" : \"message\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<InlineResponse2005>(exampleJson)
                        : default(InlineResponse2005);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>the method returns the “JEC” master with field data from the “Account” Master</remarks>
        /// <param name="accessToken"></param>
        /// <param name="code"></param>
        /// <response code="200">Successful opeartion</response>
        /// <response code="403">Forbidden - Access to the resource by the provider is forbidden</response>
        /// <response code="404">Not found - The requested resource is not found</response>
        /// <response code="502">Provider server error - Something went wrong on the Provider or Endpoint’s server</response>
        [HttpGet]
        [Route("/8API/Screen/Masters/Core__Account/{Code}")]
        [ValidateModelState]
        [SwaggerOperation("8APIScreenMastersCoreAccountCodeGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(InlineResponse2002), description: "Successful opeartion")]
        public virtual IActionResult 8APIScreenMastersCoreAccountCodeGet([FromHeader][Required()]string accessToken, [FromRoute][Required]string code)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(InlineResponse2002));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            //TODO: Uncomment the next line to return response 502 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(502);
            string exampleJson = null;
            exampleJson = "{\n  \"result\" : 0,\n  \"data\" : [ {\n    \"iDeliveryCity__Name\" : \"iDeliveryCity__Name\",\n    \"sCode\" : \"sCode\",\n    \"iCreatedDate\" : \"iCreatedDate\",\n    \"Alias\" : \"Alias\",\n    \"sName\" : \"sName\",\n    \"iAccountType\" : 6,\n    \"iStatus\" : 1,\n    \"iPDCDiscountedAC__Name\" : \"iPDCDiscountedAC__Name\",\n    \"BinCapacity\" : 5\n  }, {\n    \"iDeliveryCity__Name\" : \"iDeliveryCity__Name\",\n    \"sCode\" : \"sCode\",\n    \"iCreatedDate\" : \"iCreatedDate\",\n    \"Alias\" : \"Alias\",\n    \"sName\" : \"sName\",\n    \"iAccountType\" : 6,\n    \"iStatus\" : 1,\n    \"iPDCDiscountedAC__Name\" : \"iPDCDiscountedAC__Name\",\n    \"BinCapacity\" : 5\n  } ],\n  \"message\" : \"message\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<InlineResponse2002>(exampleJson)
                        : default(InlineResponse2002);            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
