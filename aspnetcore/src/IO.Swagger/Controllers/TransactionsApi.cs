/*
 * API Documentation
 *
 * defaultDeription
 *
 * OpenAPI spec version: 1.0.0-oas3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;
using IO.Swagger.Security;
using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class TransactionsApiController : ControllerBase
    { 
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>To get the List of Transactions</remarks>
        /// <param name="accessToken"></param>
        /// <response code="200">successful operation</response>
        /// <response code="403">Forbidden - Access to the resource by the provider is forbidden</response>
        /// <response code="404">Not found - The requested resource is not found</response>
        /// <response code="502">Provider server error - Something went wrong on the Provider or Endpoint’s server</response>
        [HttpGet]
        [Route("/8API/List/Transactions")]
        [ValidateModelState]
        [SwaggerOperation("8APIListTransactionsGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(InlineResponse2001), description: "successful operation")]
        public virtual IActionResult 8APIListTransactionsGet([FromHeader]string accessToken)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(InlineResponse2001));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            //TODO: Uncomment the next line to return response 502 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(502);
            string exampleJson = null;
            exampleJson = "{\n  \"result\" : 0,\n  \"data\" : [ {\n    \"MenuGroupId\" : \"MenuGroupId\",\n    \"LinkSeq\" : \"LinkSeq\",\n    \"VoucherOrder\" : \"VoucherOrder\",\n    \"PostExchangeRateDiff\" : \"PostExchangeRateDiff\",\n    \"InputExchangeRate\" : \"InputExchangeRate\",\n    \"DefAcc__Code\" : \"DefAcc__Code\",\n    \"Inventory\" : \"Inventory\",\n    \"Abbr\" : \"Abbr\",\n    \"VoucherType\" : \"VoucherType\"\n  }, {\n    \"MenuGroupId\" : \"MenuGroupId\",\n    \"LinkSeq\" : \"LinkSeq\",\n    \"VoucherOrder\" : \"VoucherOrder\",\n    \"PostExchangeRateDiff\" : \"PostExchangeRateDiff\",\n    \"InputExchangeRate\" : \"InputExchangeRate\",\n    \"DefAcc__Code\" : \"DefAcc__Code\",\n    \"Inventory\" : \"Inventory\",\n    \"Abbr\" : \"Abbr\",\n    \"VoucherType\" : \"VoucherType\"\n  } ],\n  \"message\" : \"message\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<InlineResponse2001>(exampleJson)
                        : default(InlineResponse2001);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>To get the particular voucher data</remarks>
        /// <param name="accessToken"></param>
        /// <response code="200">successful operation</response>
        /// <response code="403">Forbidden - Access to the resource by the provider is forbidden</response>
        /// <response code="404">Not found - The requested resource is not found</response>
        /// <response code="502">Provider server error - Something went wrong on the Provider or Endpoint’s server</response>
        [HttpGet]
        [Route("/8API/List/Transactions/Opening Stocks")]
        [ValidateModelState]
        [SwaggerOperation("8APIListTransactionsOpeningStocksGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(InlineResponse2003), description: "successful operation")]
        public virtual IActionResult 8APIListTransactionsOpeningStocksGet([FromHeader]string accessToken)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(InlineResponse2003));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            //TODO: Uncomment the next line to return response 502 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(502);
            string exampleJson = null;
            exampleJson = "{\n  \"result\" : 0,\n  \"data\" : [ {\n    \"Modified by\" : \"Modified by\",\n    \"Modified time\" : \"Modified time\",\n    \"Voucher No\" : \"Voucher No\",\n    \"HeaderId\" : 6,\n    \"Quantity\" : \"Quantity\",\n    \"Created by\" : \"Created by\",\n    \"Suspended\" : true,\n    \"Created time\" : \"Created time\",\n    \"Date\" : \"Date\"\n  }, {\n    \"Modified by\" : \"Modified by\",\n    \"Modified time\" : \"Modified time\",\n    \"Voucher No\" : \"Voucher No\",\n    \"HeaderId\" : 6,\n    \"Quantity\" : \"Quantity\",\n    \"Created by\" : \"Created by\",\n    \"Suspended\" : true,\n    \"Created time\" : \"Created time\",\n    \"Date\" : \"Date\"\n  } ],\n  \"message\" : \"message\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<InlineResponse2003>(exampleJson)
                        : default(InlineResponse2003);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>AccountLedgerBalance</remarks>
        /// <param name="accessToken"></param>
        /// <response code="200">successful operation</response>
        /// <response code="403">Forbidden - Access to the resource by the provider is forbidden</response>
        /// <response code="404">Not found - The requested resource is not found</response>
        /// <response code="502">Provider server error - Something went wrong on the Provider or Endpoint’s server      </response>
        [HttpGet]
        [Route("/8API/Screen/Transactions/AccountLedgerBalance/Sales")]
        [ValidateModelState]
        [SwaggerOperation("8APIScreenTransactionsAccountLedgerBalanceSalesGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(InlineResponse20016), description: "successful operation")]
        public virtual IActionResult 8APIScreenTransactionsAccountLedgerBalanceSalesGet([FromHeader][Required()]string accessToken)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(InlineResponse20016));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            //TODO: Uncomment the next line to return response 502 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(502);
            string exampleJson = null;
            exampleJson = "{\n  \"result\" : 0,\n  \"data\" : [ {\n    \"Debit\" : 1,\n    \"Credit\" : 6,\n    \"OpeningBalance\" : 5,\n    \"Balance\" : 5\n  }, {\n    \"Debit\" : 1,\n    \"Credit\" : 6,\n    \"OpeningBalance\" : 5,\n    \"Balance\" : 5\n  } ],\n  \"message\" : \"message\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<InlineResponse20016>(exampleJson)
                        : default(InlineResponse20016);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Auto generated using Swagger Inspector</remarks>
        /// <param name="voucherNo"></param>
        /// <param name="accessToken"></param>
        /// <response code="200">Auto generated using Swagger Inspector</response>
        /// <response code="403">Forbidden - Access to the resource by the provider is forbidden</response>
        /// <response code="404">Not found - The requested resource is not found</response>
        /// <response code="502">Provider server error - Something went wrong on the Provider or Endpoint’s server</response>
        [HttpGet]
        [Route("/8API/Screen/Transactions/Opening Stocks/{VoucherNo}")]
        [ValidateModelState]
        [SwaggerOperation("8APIScreenTransactionsOpeningStocksVoucherNoGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(InlineResponse2006), description: "Auto generated using Swagger Inspector")]
        public virtual IActionResult 8APIScreenTransactionsOpeningStocksVoucherNoGet([FromRoute][Required]string voucherNo, [FromHeader]string accessToken)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(InlineResponse2006));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            //TODO: Uncomment the next line to return response 502 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(502);
            string exampleJson = null;
            exampleJson = "{\n  \"result\" : 0,\n  \"data\" : [ {\n    \"Footer\" : [ { }, { } ],\n    \"header\" : [ {\n      \"HeaderId\" : 9,\n      \"DocNo\" : \"DocNo\",\n      \"Date\" : 7\n    }, {\n      \"HeaderId\" : 9,\n      \"DocNo\" : \"DocNo\",\n      \"Date\" : 7\n    } ],\n    \"body\" : [ {\n      \"Inventory Allocation Status__Name\" : \"Inventory Allocation Status__Name\",\n      \"Description\" : \"Description\",\n      \"Rate\" : 5,\n      \"Warehouse__Id\" : 6,\n      \"Quantity\" : 5,\n      \"Gross\" : 2,\n      \"Product__Id\" : 1\n    }, {\n      \"Inventory Allocation Status__Name\" : \"Inventory Allocation Status__Name\",\n      \"Description\" : \"Description\",\n      \"Rate\" : 5,\n      \"Warehouse__Id\" : 6,\n      \"Quantity\" : 5,\n      \"Gross\" : 2,\n      \"Product__Id\" : 1\n    } ]\n  }, {\n    \"Footer\" : [ { }, { } ],\n    \"header\" : [ {\n      \"HeaderId\" : 9,\n      \"DocNo\" : \"DocNo\",\n      \"Date\" : 7\n    }, {\n      \"HeaderId\" : 9,\n      \"DocNo\" : \"DocNo\",\n      \"Date\" : 7\n    } ],\n    \"body\" : [ {\n      \"Inventory Allocation Status__Name\" : \"Inventory Allocation Status__Name\",\n      \"Description\" : \"Description\",\n      \"Rate\" : 5,\n      \"Warehouse__Id\" : 6,\n      \"Quantity\" : 5,\n      \"Gross\" : 2,\n      \"Product__Id\" : 1\n    }, {\n      \"Inventory Allocation Status__Name\" : \"Inventory Allocation Status__Name\",\n      \"Description\" : \"Description\",\n      \"Rate\" : 5,\n      \"Warehouse__Id\" : 6,\n      \"Quantity\" : 5,\n      \"Gross\" : 2,\n      \"Product__Id\" : 1\n    } ]\n  } ],\n  \"message\" : \"message\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<InlineResponse2006>(exampleJson)
                        : default(InlineResponse2006);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>To get the all Transaction preferences</remarks>
        /// <param name="accessToken"></param>
        /// <response code="200">successful operation</response>
        /// <response code="403">Forbidden - Access to the resource by the provider is forbidden</response>
        /// <response code="404">Not found - The requested resource is not found</response>
        /// <response code="502">Provider server error - Something went wrong on the Provider or Endpoint’s server      </response>
        [HttpGet]
        [Route("/8API/Screen/Transactions/Preferences")]
        [ValidateModelState]
        [SwaggerOperation("8APIScreenTransactionsPreferencesGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(InlineResponse20015), description: "successful operation")]
        public virtual IActionResult 8APIScreenTransactionsPreferencesGet([FromHeader][Required()]string accessToken)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(InlineResponse20015));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            //TODO: Uncomment the next line to return response 502 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(502);
            string exampleJson = null;
            exampleJson = "{\n  \"result\" : 0,\n  \"data\" : [ {\n    \"CheckNegativeStockAction\" : 6,\n    \"SellingRate\" : 1,\n    \"DefCurrency\" : [ {\n      \"Symbol\" : \"Symbol\",\n      \"GeneralRoundOff\" : 4,\n      \"RoundingType\" : 3,\n      \"CurrencyId\" : 9,\n      \"NoofDecimals\" : 2\n    }, {\n      \"Symbol\" : \"Symbol\",\n      \"GeneralRoundOff\" : 4,\n      \"RoundingType\" : 3,\n      \"CurrencyId\" : 9,\n      \"NoofDecimals\" : 2\n    } ],\n    \"InvTagId\" : 5,\n    \"CheckReorderAction\" : 7,\n    \"CheckOverdueBillsAction\" : 2,\n    \"FaTagId\" : 5\n  }, {\n    \"CheckNegativeStockAction\" : 6,\n    \"SellingRate\" : 1,\n    \"DefCurrency\" : [ {\n      \"Symbol\" : \"Symbol\",\n      \"GeneralRoundOff\" : 4,\n      \"RoundingType\" : 3,\n      \"CurrencyId\" : 9,\n      \"NoofDecimals\" : 2\n    }, {\n      \"Symbol\" : \"Symbol\",\n      \"GeneralRoundOff\" : 4,\n      \"RoundingType\" : 3,\n      \"CurrencyId\" : 9,\n      \"NoofDecimals\" : 2\n    } ],\n    \"InvTagId\" : 5,\n    \"CheckReorderAction\" : 7,\n    \"CheckOverdueBillsAction\" : 2,\n    \"FaTagId\" : 5\n  } ],\n  \"message\" : \"message\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<InlineResponse20015>(exampleJson)
                        : default(InlineResponse20015);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>TransactionViews</remarks>
        /// <param name="accessToken"></param>
        /// <response code="200">successful operation</response>
        /// <response code="403">Forbidden - Access to the resource by the provider is forbidden</response>
        /// <response code="404">Not found - The requested resource is not found</response>
        /// <response code="502">Provider server error - Something went wrong on the Provider or Endpoint’s server      </response>
        [HttpGet]
        [Route("/8API/Screen/Transactions/TransactionViews/Sales Orders")]
        [ValidateModelState]
        [SwaggerOperation("8APIScreenTransactionsTransactionViewsSalesOrdersGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(InlineResponse20017), description: "successful operation")]
        public virtual IActionResult 8APIScreenTransactionsTransactionViewsSalesOrdersGet([FromHeader][Required()]string accessToken)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(InlineResponse20017));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            //TODO: Uncomment the next line to return response 502 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(502);
            string exampleJson = null;
            exampleJson = "{\n  \"result\" : 0,\n  \"data\" : [ {\n    \"View__Name\" : \"View__Name\",\n    \"View__ID\" : 6\n  }, {\n    \"View__Name\" : \"View__Name\",\n    \"View__ID\" : 6\n  } ],\n  \"message\" : \"message\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<InlineResponse20017>(exampleJson)
                        : default(InlineResponse20017);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>To Get the all VoucherTypes</remarks>
        /// <param name="accessToken"></param>
        /// <response code="200">successful operation</response>
        /// <response code="403">Forbidden - Access to the resource by the provider is forbidden</response>
        /// <response code="404">Not found - The requested resource is not found</response>
        /// <response code="502">Provider server error - Something went wrong on the Provider or Endpoint’s server      </response>
        [HttpGet]
        [Route("/8API/Screen/Transactions/VoucherTypes")]
        [ValidateModelState]
        [SwaggerOperation("8APIScreenTransactionsVoucherTypesGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(InlineResponse20014), description: "successful operation")]
        public virtual IActionResult 8APIScreenTransactionsVoucherTypesGet([FromHeader][Required()]string accessToken)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(InlineResponse20014));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            //TODO: Uncomment the next line to return response 502 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(502);
            string exampleJson = null;
            exampleJson = "{\n  \"result\" : 0,\n  \"data\" : [ {\n    \"UpdateInvCanBeChanged\" : true,\n    \"BatchPick\" : \"BatchPick\",\n    \"PostExchangeRateDiff\" : true,\n    \"RateFormulaBehaviour\" : \"RateFormulaBehaviour\",\n    \"CostOfIssueAcc\" : \"CostOfIssueAcc\",\n    \"Inventory\" : true,\n    \"PostVAT\" : \"PostVAT\",\n    \"Name\" : \"Name\",\n    \"DetailedPosting\" : true,\n    \"VoucherType\" : 6\n  }, {\n    \"UpdateInvCanBeChanged\" : true,\n    \"BatchPick\" : \"BatchPick\",\n    \"PostExchangeRateDiff\" : true,\n    \"RateFormulaBehaviour\" : \"RateFormulaBehaviour\",\n    \"CostOfIssueAcc\" : \"CostOfIssueAcc\",\n    \"Inventory\" : true,\n    \"PostVAT\" : \"PostVAT\",\n    \"Name\" : \"Name\",\n    \"DetailedPosting\" : true,\n    \"VoucherType\" : 6\n  } ],\n  \"message\" : \"message\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<InlineResponse20014>(exampleJson)
                        : default(InlineResponse20014);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Stock</remarks>
        /// <param name="accessToken"></param>
        /// <param name="product"></param>
        /// <response code="200">Auto generated using Swagger Inspector</response>
        /// <response code="403">Forbidden - Access to the resource by the provider is forbidden</response>
        /// <response code="404">Not found - The requested resource is not found</response>
        /// <response code="502">Provider server error - Something went wrong on the Provider or Endpoint’s server      </response>
        [HttpGet]
        [Route("/8API/Screen/Transactions/WareHouseStock/{Product}")]
        [ValidateModelState]
        [SwaggerOperation("8APIScreenTransactionsWareHouseStockProductGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(string), description: "Auto generated using Swagger Inspector")]
        public virtual IActionResult 8APIScreenTransactionsWareHouseStockProductGet([FromHeader][Required()]string accessToken, [FromRoute][Required]string product)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(string));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            //TODO: Uncomment the next line to return response 502 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(502);
            string exampleJson = null;
            exampleJson = "\"\"";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<string>(exampleJson)
                        : default(string);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>batch popup data</remarks>
        /// <param name="accessToken"></param>
        /// <param name="body"></param>
        /// <response code="200">successful operation</response>
        /// <response code="403">Forbidden - Access to the resource by the provider is forbidden</response>
        /// <response code="404">Not found - The requested resource is not found</response>
        /// <response code="502">Provider server error - Something went wrong on the Provider or Endpoint’s server </response>
        [HttpPost]
        [Route("/8API/Transactions/Batches")]
        [ValidateModelState]
        [SwaggerOperation("8APITransactionsBatchesPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(InlineResponse20023), description: "successful operation")]
        public virtual IActionResult 8APITransactionsBatchesPost([FromHeader][Required()]string accessToken, [FromBody]Body6 body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(InlineResponse20023));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            //TODO: Uncomment the next line to return response 502 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(502);
            string exampleJson = null;
            exampleJson = "{\n  \"result\" : 0,\n  \"data\" : [ {\n    \"Batches\" : [ {\n      \"IsBatchExists\" : true,\n      \"ExpiryDate\" : 1,\n      \"BatchId\" : 6,\n      \"BatchQuntity\" : 5\n    }, {\n      \"IsBatchExists\" : true,\n      \"ExpiryDate\" : 1,\n      \"BatchId\" : 6,\n      \"BatchQuntity\" : 5\n    } ]\n  }, {\n    \"Batches\" : [ {\n      \"IsBatchExists\" : true,\n      \"ExpiryDate\" : 1,\n      \"BatchId\" : 6,\n      \"BatchQuntity\" : 5\n    }, {\n      \"IsBatchExists\" : true,\n      \"ExpiryDate\" : 1,\n      \"BatchId\" : 6,\n      \"BatchQuntity\" : 5\n    } ]\n  } ],\n  \"message\" : \"message\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<InlineResponse20023>(exampleJson)
                        : default(InlineResponse20023);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Bins popup data</remarks>
        /// <param name="accessToken"></param>
        /// <param name="body"></param>
        /// <response code="200">successful operation</response>
        /// <response code="403">Forbidden - Access to the resource by the provider is forbidden</response>
        /// <response code="404">Not found - The requested resource is not found</response>
        /// <response code="502">Provider server error - Something went wrong on the Provider or Endpoint’s server  </response>
        [HttpPost]
        [Route("/8API/Transactions/Bins")]
        [ValidateModelState]
        [SwaggerOperation("8APITransactionsBinsPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(InlineResponse20021), description: "successful operation")]
        public virtual IActionResult 8APITransactionsBinsPost([FromHeader][Required()]string accessToken, [FromBody]Body4 body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(InlineResponse20021));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            //TODO: Uncomment the next line to return response 502 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(502);
            string exampleJson = null;
            exampleJson = "{\n  \"result\" : 0,\n  \"data\" : [ {\n    \"ProductData\" : [ {\n      \"Category\" : 9,\n      \"Id\" : 7,\n      \"BinCapacity\" : 3\n    }, {\n      \"Category\" : 9,\n      \"Id\" : 7,\n      \"BinCapacity\" : 3\n    } ],\n    \"BinsDetails\" : [ {\n      \"Group\" : 5,\n      \"Quantity\" : 2,\n      \"Id\" : 1,\n      \"FreeSpace\" : 5,\n      \"Distance\" : 6,\n      \"Name\" : \"Name\"\n    }, {\n      \"Group\" : 5,\n      \"Quantity\" : 2,\n      \"Id\" : 1,\n      \"FreeSpace\" : 5,\n      \"Distance\" : 6,\n      \"Name\" : \"Name\"\n    } ]\n  }, {\n    \"ProductData\" : [ {\n      \"Category\" : 9,\n      \"Id\" : 7,\n      \"BinCapacity\" : 3\n    }, {\n      \"Category\" : 9,\n      \"Id\" : 7,\n      \"BinCapacity\" : 3\n    } ],\n    \"BinsDetails\" : [ {\n      \"Group\" : 5,\n      \"Quantity\" : 2,\n      \"Id\" : 1,\n      \"FreeSpace\" : 5,\n      \"Distance\" : 6,\n      \"Name\" : \"Name\"\n    }, {\n      \"Group\" : 5,\n      \"Quantity\" : 2,\n      \"Id\" : 1,\n      \"FreeSpace\" : 5,\n      \"Distance\" : 6,\n      \"Name\" : \"Name\"\n    } ]\n  } ],\n  \"message\" : \"message\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<InlineResponse20021>(exampleJson)
                        : default(InlineResponse20021);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Generating the new voucher number for vouchertype</remarks>
        /// <param name="accessToken"></param>
        /// <param name="body"></param>
        /// <response code="200">successful operation</response>
        /// <response code="403">Forbidden - Access to the resource by the provider is forbidden</response>
        /// <response code="404">Not found - The requested resource is not found</response>
        /// <response code="502">Provider server error - Something went wrong on the Provider or Endpoint’s server</response>
        [HttpPost]
        [Route("/8API/Transactions/NewVoucherNumber")]
        [ValidateModelState]
        [SwaggerOperation("8APITransactionsNewVoucherNumberPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(InlineResponse20022), description: "successful operation")]
        public virtual IActionResult 8APITransactionsNewVoucherNumberPost([FromHeader][Required()]string accessToken, [FromBody]Body5 body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(InlineResponse20022));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            //TODO: Uncomment the next line to return response 502 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(502);
            string exampleJson = null;
            exampleJson = "{\n  \"result\" : 0,\n  \"data\" : [ {\n    \"NewVoucherNumber\" : \"NewVoucherNumber\"\n  }, {\n    \"NewVoucherNumber\" : \"NewVoucherNumber\"\n  } ],\n  \"message\" : \"message\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<InlineResponse20022>(exampleJson)
                        : default(InlineResponse20022);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>For saving the Voucher</remarks>
        /// <param name="body"></param>
        /// <param name="accessToken"></param>
        /// <response code="200">Successful operation</response>
        /// <response code="403">Forbidden - Access to the resource by the provider is forbidden</response>
        /// <response code="404">Not found - The requested resource is not found</response>
        /// <response code="502">Provider server error - Something went wrong on the Provider or Endpoint’s server</response>
        [HttpPost]
        [Route("/8API/Transactions/Opening Stocks")]
        [ValidateModelState]
        [SwaggerOperation("8APITransactionsOpeningStocksPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(InlineResponse2007), description: "Successful operation")]
        public virtual IActionResult 8APITransactionsOpeningStocksPost([FromBody]Body2 body, [FromHeader]string accessToken)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(InlineResponse2007));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            //TODO: Uncomment the next line to return response 502 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(502);
            string exampleJson = null;
            exampleJson = "{\n  \"result\" : 0,\n  \"data\" : [ {\n    \"Errors\" : \"Errors\",\n    \"TransIds\" : [ 5, 5 ],\n    \"HeaderId\" : 6,\n    \"BodyIds\" : [ 1, 1 ],\n    \"Posted\" : true,\n    \"VoucherNo\" : \"VoucherNo\"\n  }, {\n    \"Errors\" : \"Errors\",\n    \"TransIds\" : [ 5, 5 ],\n    \"HeaderId\" : 6,\n    \"BodyIds\" : [ 1, 1 ],\n    \"Posted\" : true,\n    \"VoucherNo\" : \"VoucherNo\"\n  } ],\n  \"message\" : \"message\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<InlineResponse2007>(exampleJson)
                        : default(InlineResponse2007);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>For Delete the Voucher</remarks>
        /// <param name="voucherNo"></param>
        /// <param name="accessToken"></param>
        /// <response code="200">Auto generated using Swagger Inspector</response>
        /// <response code="403">Forbidden - Access to the resource by the provider is forbidden</response>
        /// <response code="404">Not found - The requested resource is not found</response>
        /// <response code="502">Provider server error - Something went wrong on the Provider or Endpoint’s server</response>
        [HttpDelete]
        [Route("/8API/Transactions/Opening Stocks/{VoucherNo}")]
        [ValidateModelState]
        [SwaggerOperation("8APITransactionsOpeningStocksVoucherNoDelete")]
        [SwaggerResponse(statusCode: 200, type: typeof(InlineResponse2009), description: "Auto generated using Swagger Inspector")]
        public virtual IActionResult 8APITransactionsOpeningStocksVoucherNoDelete([FromRoute][Required]string voucherNo, [FromHeader]string accessToken)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(InlineResponse2009));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            //TODO: Uncomment the next line to return response 502 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(502);
            string exampleJson = null;
            exampleJson = "{\n  \"result\" : 0,\n  \"data\" : [ { }, { } ],\n  \"message\" : \"message\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<InlineResponse2009>(exampleJson)
                        : default(InlineResponse2009);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Option Control data</remarks>
        /// <param name="accessToken"></param>
        /// <param name="body"></param>
        /// <response code="200">successful operation</response>
        /// <response code="403">Forbidden - Access to the resource by the provider is forbidden</response>
        /// <response code="404">Not found - The requested resource is not found</response>
        /// <response code="502">Provider server error - Something went wrong on the Provider or Endpoint’s server</response>
        [HttpPost]
        [Route("/8API/Transactions/OptionControlData")]
        [ValidateModelState]
        [SwaggerOperation("8APITransactionsOptionControlDataPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(InlineResponse20024), description: "successful operation")]
        public virtual IActionResult 8APITransactionsOptionControlDataPost([FromHeader][Required()]string accessToken, [FromBody]Body7 body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(InlineResponse20024));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            //TODO: Uncomment the next line to return response 502 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(502);
            string exampleJson = null;
            exampleJson = "{\n  \"result\" : 0,\n  \"data\" : [ {\n    \"header\" : [ \"[iMasterId, Code^92, Name^101, ProductType^100, MasterId^100]\", \"[iMasterId, Code^92, Name^101, ProductType^100, MasterId^100]\" ],\n    \"Body\" : [ \"[28047, 628450000014, Sheet Set-1000TC-EGY/CT/SD-Dbl/Full-Assorted-NA-MONTEBELLO FLN, 4, 28047]\", \"[28047, 628450000014, Sheet Set-1000TC-EGY/CT/SD-Dbl/Full-Assorted-NA-MONTEBELLO FLN, 4, 28047]\" ]\n  }, {\n    \"header\" : [ \"[iMasterId, Code^92, Name^101, ProductType^100, MasterId^100]\", \"[iMasterId, Code^92, Name^101, ProductType^100, MasterId^100]\" ],\n    \"Body\" : [ \"[28047, 628450000014, Sheet Set-1000TC-EGY/CT/SD-Dbl/Full-Assorted-NA-MONTEBELLO FLN, 4, 28047]\", \"[28047, 628450000014, Sheet Set-1000TC-EGY/CT/SD-Dbl/Full-Assorted-NA-MONTEBELLO FLN, 4, 28047]\" ]\n  } ],\n  \"message\" : \"message\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<InlineResponse20024>(exampleJson)
                        : default(InlineResponse20024);            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
